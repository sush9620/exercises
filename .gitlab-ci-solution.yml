stages:
  - test
  - code quality
  - build
  - deploy

unit tests:
  stage: test
  image: python:3.11
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_OPEN_MERGE_REQUESTS
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - pytest

generate swagger:
  stage: test
  image: python:3.11
  variables:
    FLASK_APP: "accounting.app:setup_app"
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_OPEN_MERGE_REQUESTS
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - flask swagger > swagger.json
  artifacts:
    paths:
      - swagger.json
    expire_in: 10min

code lint:
  stage: code quality
  image: python:3.11
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      allow_failure: true
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install flake8
    - flake8 accounting

swagger lint:
  stage: code quality
  dependencies:
    - generate swagger
  image:
    name: stoplight/spectral
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      allow_failure: true
  script:
    - spectral lint swagger.json

build docker:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      variables:
        DOCKER_PUSH: "--no-push"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "deploy/dev"
    - if: $CI_COMMIT_BRANCH == "deploy/rct"
    - if: $CI_COMMIT_BRANCH == "deploy/prod"
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      $DOCKER_PUSH

deploy dev:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "deploy/dev"
  script:
    - echo "Deploying to dev"
    - echo "Using credentials $DEPLOY_USER with token $DEPLOY_TOKEN"

deploy rct:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "deploy/rct"
  script:
    - echo "Deploying to rct"
    - echo "Using credentials $DEPLOY_USER with token $DEPLOY_TOKEN"

deploy prd:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "deploy/prd"
      when: manual
  script:
    - echo "Deploying to prd"
    - echo "Using credentials $DEPLOY_USER with token $DEPLOY_TOKEN"
